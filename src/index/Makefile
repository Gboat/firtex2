# Makefile.in generated by automake 1.11.3 from Makefile.am.
# src/index/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/firtex
pkgincludedir = $(includedir)/firtex
pkglibdir = $(libdir)/firtex
pkglibexecdir = $(libexecdir)/firtex
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
target_triplet = i686-pc-linux-gnu
subdir = src/index
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/firtex/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libindex_la_LIBADD =
am_libindex_la_OBJECTS = BarrelTermPositionIterator.lo \
	BarrelTermPostingIterator.lo CommitList.lo BarrelsInfo.lo \
	ByteSliceInputStream.lo ByteSliceOutputStream.lo \
	ComponentBuilder.lo ComponentCreatorFactory.lo \
	DeletedDocumentFilter.lo DocPostingDecoder.lo \
	DocPostingMerger.lo DocPostingWriter.lo DocSkipListReader.lo \
	DocSkipListWriter.lo AsyncDocumentConsumer.lo FieldMerger.lo \
	ForwardIndexFactory.lo InMemIndexBarrelReader.lo \
	InMemIndexMerger.lo Index.lo IndexBarrelReader.lo \
	IndexBarrelWriter.lo IndexBarrelKeeper.lo IndexMerger.lo \
	IndexReader.lo IndexWriter.lo LengthNormMerger.lo \
	LengthNormReader.lo LengthNormWriter.lo \
	MultiFieldTermReader.lo MultiIndex.lo \
	MultiIndexBarrelReader.lo MultiIndexReader.lo \
	MultiPostingDecoder.lo MultiStoredFieldsReader.lo \
	MultiTermIterator.lo MultiTermPostingIterator.lo \
	MultiTermReader.lo DocIdRecycling.lo OptPFDPostingCoding.lo \
	OptimizeMergePolicy.lo DBTMergePolicy.lo MergePolicyFactory.lo \
	PosPostingDecoder.lo PosPostingMerger.lo PosPostingWriter.lo \
	PosSkipListReader.lo PosSkipListWriter.lo \
	PostingCodingFactory.lo PrimaryKeyIndex.lo \
	SingleIndexBarrelReader.lo StoredFieldsMerger.lo \
	StoredFieldsReaderImpl.lo StoredFieldsWriter.lo Term.lo \
	SyncCommitScheduler.lo AsyncCommitScheduler.lo \
	BarrelDirectory.lo KeepByCommitIndexCleaner.lo \
	IndexCleanerFactory.lo SequenceMergeScheduler.lo \
	ConcurrentMergeScheduler.lo OptPForDeltaCoding.lo Pack.lo \
	S16Coding.lo Unpack.lo TextComponentCreator.lo \
	TextIndexMerger.lo TextIndexer.lo TextTermIterator.lo \
	TextTermReader.lo InMemTextTermReader.lo \
	KeywordComponentCreator.lo KeywordIndexMerger.lo \
	KeywordIndexer.lo KeywordTermIterator.lo KeywordTermReader.lo \
	InMemKeywordTermReader.lo PrimaryKeyTermReader.lo \
	PrimaryKeyTermIterator.lo PrimaryKeyPostingDecoder.lo \
	PrimaryKeyIndexer.lo PrimaryKeyMerger.lo PrimaryKeyCreator.lo \
	DateTimeComponentCreator.lo DateTimeIndexMerger.lo \
	DateTimeIndexer.lo DateTimeTermIterator.lo \
	DateTimeTermReader.lo InMemDateTimeTermReader.lo
libindex_la_OBJECTS = $(am_libindex_la_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(top_builddir)/include/firtex
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libindex_la_SOURCES)
DIST_SOURCES = $(libindex_la_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/g/workspace/code/firtex2/missing --run aclocal-1.11
AMTAR = $${TAR-tar}
AR = ar
AUTOCONF = ${SHELL} /home/g/workspace/code/firtex2/missing --run autoconf
AUTOHEADER = ${SHELL} /home/g/workspace/code/firtex2/missing --run autoheader
AUTOMAKE = ${SHELL} /home/g/workspace/code/firtex2/missing --run automake-1.11
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS =  -Wall -g -D_FILE_OFFSET_BITS=64 -O3 -DNDEBUG -fno-strict-aliasing -msse2 -DHAVE_HIGHLIGHTER -DHAVE_ZOOKEEPER -DHAVE_THRIFT
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS =  -Wall -g -D_FILE_OFFSET_BITS=64 -O3 -DNDEBUG -fno-strict-aliasing -msse2 -DHAVE_HIGHLIGHTER -DHAVE_ZOOKEEPER -DHAVE_THRIFT
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DOT = true
DOXYGEN = true
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
FIRTEX2_MAJOR_VERSION = 0
FIRTEX2_MICRO_VERSION = 0
FIRTEX2_MINOR_VERSION = 5
FIRTEX2_VERSION = 0.5.0
FX_BOOST_HOME = /home/g/workspace/code/firtex2/external
FX_LIBEVENT_DIR = libevent
FX_LIBEVENT_HOME = /home/g/workspace/code/firtex2/external/libevent
FX_TCMALLOC_HOME = /usr/lib
FX_THRIFT_DIR = thrift
FX_THRIFT_HOME = /home/g/workspace/code/firtex2/external/thrift
FX_ZOOKEEPER_C_DIR = zookeeper_c
FX_ZOOKEEPER_C_HOME = /home/g/workspace/code/firtex2/external/zookeeper_c
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld
LDFLAGS = 
LEX = flex
LEXLIB = -lfl
LEX_OUTPUT_ROOT = lex.yy
LIBOBJS = 
LIBS =  -lrt -ldl
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/g/workspace/code/firtex2/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = firtex
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_URL = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 0.5.0
YACC = bison -y
YFLAGS = 
abs_builddir = /home/g/workspace/code/firtex2/src/index
abs_srcdir = /home/g/workspace/code/firtex2/src/index
abs_top_builddir = /home/g/workspace/code/firtex2
abs_top_srcdir = /home/g/workspace/code/firtex2
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
enable_dot = yes
enable_doxygen = yes
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/g/workspace/code/firtex2/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
subdirs =  contrib
sysconfdir = ${prefix}/etc
target = i686-pc-linux-gnu
target_alias = 
target_cpu = i686
target_os = linux-gnu
target_vendor = pc
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
INCLUDES = -I $(top_srcdir)/include
noinst_LTLIBRARIES = libindex.la
libindex_la_SOURCES = \
	BarrelTermPositionIterator.cpp\
	BarrelTermPostingIterator.cpp\
	CommitList.cpp\
	BarrelsInfo.cpp\
	ByteSliceInputStream.cpp\
	ByteSliceOutputStream.cpp\
	ComponentBuilder.cpp\
	ComponentCreatorFactory.cpp\
	DeletedDocumentFilter.cpp\
	DocPostingDecoder.cpp\
	DocPostingMerger.cpp\
	DocPostingWriter.cpp\
	DocSkipListReader.cpp\
	DocSkipListWriter.cpp\
	AsyncDocumentConsumer.cpp\
	FieldMerger.cpp\
	ForwardIndexFactory.cpp\
	InMemIndexBarrelReader.cpp\
	InMemIndexMerger.cpp\
	Index.cpp\
	IndexBarrelReader.cpp\
	IndexBarrelWriter.cpp\
	IndexBarrelKeeper.cpp\
	IndexMerger.cpp\
	IndexReader.cpp\
	IndexWriter.cpp\
	LengthNormMerger.cpp\
	LengthNormReader.cpp\
	LengthNormWriter.cpp\
	Makefile.am\
	Makefile.in\
	MultiFieldTermReader.cpp\
	MultiIndex.cpp\
	MultiIndexBarrelReader.cpp\
	MultiIndexReader.cpp\
	MultiPostingDecoder.cpp\
	MultiStoredFieldsReader.cpp\
	MultiTermIterator.cpp\
	MultiTermPostingIterator.cpp\
	MultiTermReader.cpp\
	DocIdRecycling.cpp\
	OptPFDPostingCoding.cpp\
	OptimizeMergePolicy.cpp\
	DBTMergePolicy.cpp\
	MergePolicyFactory.cpp\
	PosPostingDecoder.cpp\
	PosPostingMerger.cpp\
	PosPostingWriter.cpp\
	PosSkipListReader.cpp\
	PosSkipListWriter.cpp\
	PostingCodingFactory.cpp\
	PrimaryKeyIndex.cpp\
	SingleIndexBarrelReader.cpp\
	StoredFieldsMerger.cpp\
	StoredFieldsReaderImpl.cpp\
	StoredFieldsWriter.cpp\
	Term.cpp\
	SyncCommitScheduler.cpp\
	AsyncCommitScheduler.cpp\
	BarrelDirectory.cpp\
	KeepByCommitIndexCleaner.cpp\
	IndexCleanerFactory.cpp\
	SequenceMergeScheduler.cpp\
	ConcurrentMergeScheduler.cpp\
	compress/OptPForDeltaCoding.cpp\
	compress/Pack.cpp\
	compress/S16Coding.cpp\
	compress/Unpack.cpp\
	text/TextComponentCreator.cpp\
	text/TextIndexMerger.cpp\
	text/TextIndexer.cpp\
	text/TextTermIterator.cpp\
	text/TextTermReader.cpp\
	text/InMemTextTermReader.cpp\
	keyword/KeywordComponentCreator.cpp\
	keyword/KeywordIndexMerger.cpp\
	keyword/KeywordIndexer.cpp\
	keyword/KeywordTermIterator.cpp\
	keyword/KeywordTermReader.cpp\
	keyword/InMemKeywordTermReader.cpp\
	primarykey/PrimaryKeyTermReader.cpp\
	primarykey/PrimaryKeyTermIterator.cpp\
	primarykey/PrimaryKeyPostingDecoder.cpp\
	primarykey/PrimaryKeyIndexer.cpp\
	primarykey/PrimaryKeyMerger.cpp\
	primarykey/PrimaryKeyCreator.cpp\
	datetime/DateTimeComponentCreator.cpp\
	datetime/DateTimeIndexMerger.cpp\
	datetime/DateTimeIndexer.cpp\
	datetime/DateTimeTermIterator.cpp\
	datetime/DateTimeTermReader.cpp\
	datetime/InMemDateTimeTermReader.cpp

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/index/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/index/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libindex.la: $(libindex_la_OBJECTS) $(libindex_la_DEPENDENCIES) $(EXTRA_libindex_la_DEPENDENCIES) 
	$(CXXLINK)  $(libindex_la_OBJECTS) $(libindex_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/AsyncCommitScheduler.Plo
include ./$(DEPDIR)/AsyncDocumentConsumer.Plo
include ./$(DEPDIR)/BarrelDirectory.Plo
include ./$(DEPDIR)/BarrelTermPositionIterator.Plo
include ./$(DEPDIR)/BarrelTermPostingIterator.Plo
include ./$(DEPDIR)/BarrelsInfo.Plo
include ./$(DEPDIR)/ByteSliceInputStream.Plo
include ./$(DEPDIR)/ByteSliceOutputStream.Plo
include ./$(DEPDIR)/CommitList.Plo
include ./$(DEPDIR)/ComponentBuilder.Plo
include ./$(DEPDIR)/ComponentCreatorFactory.Plo
include ./$(DEPDIR)/ConcurrentMergeScheduler.Plo
include ./$(DEPDIR)/DBTMergePolicy.Plo
include ./$(DEPDIR)/DateTimeComponentCreator.Plo
include ./$(DEPDIR)/DateTimeIndexMerger.Plo
include ./$(DEPDIR)/DateTimeIndexer.Plo
include ./$(DEPDIR)/DateTimeTermIterator.Plo
include ./$(DEPDIR)/DateTimeTermReader.Plo
include ./$(DEPDIR)/DeletedDocumentFilter.Plo
include ./$(DEPDIR)/DocIdRecycling.Plo
include ./$(DEPDIR)/DocPostingDecoder.Plo
include ./$(DEPDIR)/DocPostingMerger.Plo
include ./$(DEPDIR)/DocPostingWriter.Plo
include ./$(DEPDIR)/DocSkipListReader.Plo
include ./$(DEPDIR)/DocSkipListWriter.Plo
include ./$(DEPDIR)/FieldMerger.Plo
include ./$(DEPDIR)/ForwardIndexFactory.Plo
include ./$(DEPDIR)/InMemDateTimeTermReader.Plo
include ./$(DEPDIR)/InMemIndexBarrelReader.Plo
include ./$(DEPDIR)/InMemIndexMerger.Plo
include ./$(DEPDIR)/InMemKeywordTermReader.Plo
include ./$(DEPDIR)/InMemTextTermReader.Plo
include ./$(DEPDIR)/Index.Plo
include ./$(DEPDIR)/IndexBarrelKeeper.Plo
include ./$(DEPDIR)/IndexBarrelReader.Plo
include ./$(DEPDIR)/IndexBarrelWriter.Plo
include ./$(DEPDIR)/IndexCleanerFactory.Plo
include ./$(DEPDIR)/IndexMerger.Plo
include ./$(DEPDIR)/IndexReader.Plo
include ./$(DEPDIR)/IndexWriter.Plo
include ./$(DEPDIR)/KeepByCommitIndexCleaner.Plo
include ./$(DEPDIR)/KeywordComponentCreator.Plo
include ./$(DEPDIR)/KeywordIndexMerger.Plo
include ./$(DEPDIR)/KeywordIndexer.Plo
include ./$(DEPDIR)/KeywordTermIterator.Plo
include ./$(DEPDIR)/KeywordTermReader.Plo
include ./$(DEPDIR)/LengthNormMerger.Plo
include ./$(DEPDIR)/LengthNormReader.Plo
include ./$(DEPDIR)/LengthNormWriter.Plo
include ./$(DEPDIR)/MergePolicyFactory.Plo
include ./$(DEPDIR)/MultiFieldTermReader.Plo
include ./$(DEPDIR)/MultiIndex.Plo
include ./$(DEPDIR)/MultiIndexBarrelReader.Plo
include ./$(DEPDIR)/MultiIndexReader.Plo
include ./$(DEPDIR)/MultiPostingDecoder.Plo
include ./$(DEPDIR)/MultiStoredFieldsReader.Plo
include ./$(DEPDIR)/MultiTermIterator.Plo
include ./$(DEPDIR)/MultiTermPostingIterator.Plo
include ./$(DEPDIR)/MultiTermReader.Plo
include ./$(DEPDIR)/OptPFDPostingCoding.Plo
include ./$(DEPDIR)/OptPForDeltaCoding.Plo
include ./$(DEPDIR)/OptimizeMergePolicy.Plo
include ./$(DEPDIR)/Pack.Plo
include ./$(DEPDIR)/PosPostingDecoder.Plo
include ./$(DEPDIR)/PosPostingMerger.Plo
include ./$(DEPDIR)/PosPostingWriter.Plo
include ./$(DEPDIR)/PosSkipListReader.Plo
include ./$(DEPDIR)/PosSkipListWriter.Plo
include ./$(DEPDIR)/PostingCodingFactory.Plo
include ./$(DEPDIR)/PrimaryKeyCreator.Plo
include ./$(DEPDIR)/PrimaryKeyIndex.Plo
include ./$(DEPDIR)/PrimaryKeyIndexer.Plo
include ./$(DEPDIR)/PrimaryKeyMerger.Plo
include ./$(DEPDIR)/PrimaryKeyPostingDecoder.Plo
include ./$(DEPDIR)/PrimaryKeyTermIterator.Plo
include ./$(DEPDIR)/PrimaryKeyTermReader.Plo
include ./$(DEPDIR)/S16Coding.Plo
include ./$(DEPDIR)/SequenceMergeScheduler.Plo
include ./$(DEPDIR)/SingleIndexBarrelReader.Plo
include ./$(DEPDIR)/StoredFieldsMerger.Plo
include ./$(DEPDIR)/StoredFieldsReaderImpl.Plo
include ./$(DEPDIR)/StoredFieldsWriter.Plo
include ./$(DEPDIR)/SyncCommitScheduler.Plo
include ./$(DEPDIR)/Term.Plo
include ./$(DEPDIR)/TextComponentCreator.Plo
include ./$(DEPDIR)/TextIndexMerger.Plo
include ./$(DEPDIR)/TextIndexer.Plo
include ./$(DEPDIR)/TextTermIterator.Plo
include ./$(DEPDIR)/TextTermReader.Plo
include ./$(DEPDIR)/Unpack.Plo

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

OptPForDeltaCoding.lo: compress/OptPForDeltaCoding.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT OptPForDeltaCoding.lo -MD -MP -MF $(DEPDIR)/OptPForDeltaCoding.Tpo -c -o OptPForDeltaCoding.lo `test -f 'compress/OptPForDeltaCoding.cpp' || echo '$(srcdir)/'`compress/OptPForDeltaCoding.cpp
	$(am__mv) $(DEPDIR)/OptPForDeltaCoding.Tpo $(DEPDIR)/OptPForDeltaCoding.Plo
#	source='compress/OptPForDeltaCoding.cpp' object='OptPForDeltaCoding.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OptPForDeltaCoding.lo `test -f 'compress/OptPForDeltaCoding.cpp' || echo '$(srcdir)/'`compress/OptPForDeltaCoding.cpp

Pack.lo: compress/Pack.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Pack.lo -MD -MP -MF $(DEPDIR)/Pack.Tpo -c -o Pack.lo `test -f 'compress/Pack.cpp' || echo '$(srcdir)/'`compress/Pack.cpp
	$(am__mv) $(DEPDIR)/Pack.Tpo $(DEPDIR)/Pack.Plo
#	source='compress/Pack.cpp' object='Pack.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Pack.lo `test -f 'compress/Pack.cpp' || echo '$(srcdir)/'`compress/Pack.cpp

S16Coding.lo: compress/S16Coding.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT S16Coding.lo -MD -MP -MF $(DEPDIR)/S16Coding.Tpo -c -o S16Coding.lo `test -f 'compress/S16Coding.cpp' || echo '$(srcdir)/'`compress/S16Coding.cpp
	$(am__mv) $(DEPDIR)/S16Coding.Tpo $(DEPDIR)/S16Coding.Plo
#	source='compress/S16Coding.cpp' object='S16Coding.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o S16Coding.lo `test -f 'compress/S16Coding.cpp' || echo '$(srcdir)/'`compress/S16Coding.cpp

Unpack.lo: compress/Unpack.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Unpack.lo -MD -MP -MF $(DEPDIR)/Unpack.Tpo -c -o Unpack.lo `test -f 'compress/Unpack.cpp' || echo '$(srcdir)/'`compress/Unpack.cpp
	$(am__mv) $(DEPDIR)/Unpack.Tpo $(DEPDIR)/Unpack.Plo
#	source='compress/Unpack.cpp' object='Unpack.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Unpack.lo `test -f 'compress/Unpack.cpp' || echo '$(srcdir)/'`compress/Unpack.cpp

TextComponentCreator.lo: text/TextComponentCreator.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TextComponentCreator.lo -MD -MP -MF $(DEPDIR)/TextComponentCreator.Tpo -c -o TextComponentCreator.lo `test -f 'text/TextComponentCreator.cpp' || echo '$(srcdir)/'`text/TextComponentCreator.cpp
	$(am__mv) $(DEPDIR)/TextComponentCreator.Tpo $(DEPDIR)/TextComponentCreator.Plo
#	source='text/TextComponentCreator.cpp' object='TextComponentCreator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TextComponentCreator.lo `test -f 'text/TextComponentCreator.cpp' || echo '$(srcdir)/'`text/TextComponentCreator.cpp

TextIndexMerger.lo: text/TextIndexMerger.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TextIndexMerger.lo -MD -MP -MF $(DEPDIR)/TextIndexMerger.Tpo -c -o TextIndexMerger.lo `test -f 'text/TextIndexMerger.cpp' || echo '$(srcdir)/'`text/TextIndexMerger.cpp
	$(am__mv) $(DEPDIR)/TextIndexMerger.Tpo $(DEPDIR)/TextIndexMerger.Plo
#	source='text/TextIndexMerger.cpp' object='TextIndexMerger.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TextIndexMerger.lo `test -f 'text/TextIndexMerger.cpp' || echo '$(srcdir)/'`text/TextIndexMerger.cpp

TextIndexer.lo: text/TextIndexer.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TextIndexer.lo -MD -MP -MF $(DEPDIR)/TextIndexer.Tpo -c -o TextIndexer.lo `test -f 'text/TextIndexer.cpp' || echo '$(srcdir)/'`text/TextIndexer.cpp
	$(am__mv) $(DEPDIR)/TextIndexer.Tpo $(DEPDIR)/TextIndexer.Plo
#	source='text/TextIndexer.cpp' object='TextIndexer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TextIndexer.lo `test -f 'text/TextIndexer.cpp' || echo '$(srcdir)/'`text/TextIndexer.cpp

TextTermIterator.lo: text/TextTermIterator.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TextTermIterator.lo -MD -MP -MF $(DEPDIR)/TextTermIterator.Tpo -c -o TextTermIterator.lo `test -f 'text/TextTermIterator.cpp' || echo '$(srcdir)/'`text/TextTermIterator.cpp
	$(am__mv) $(DEPDIR)/TextTermIterator.Tpo $(DEPDIR)/TextTermIterator.Plo
#	source='text/TextTermIterator.cpp' object='TextTermIterator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TextTermIterator.lo `test -f 'text/TextTermIterator.cpp' || echo '$(srcdir)/'`text/TextTermIterator.cpp

TextTermReader.lo: text/TextTermReader.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TextTermReader.lo -MD -MP -MF $(DEPDIR)/TextTermReader.Tpo -c -o TextTermReader.lo `test -f 'text/TextTermReader.cpp' || echo '$(srcdir)/'`text/TextTermReader.cpp
	$(am__mv) $(DEPDIR)/TextTermReader.Tpo $(DEPDIR)/TextTermReader.Plo
#	source='text/TextTermReader.cpp' object='TextTermReader.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TextTermReader.lo `test -f 'text/TextTermReader.cpp' || echo '$(srcdir)/'`text/TextTermReader.cpp

InMemTextTermReader.lo: text/InMemTextTermReader.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT InMemTextTermReader.lo -MD -MP -MF $(DEPDIR)/InMemTextTermReader.Tpo -c -o InMemTextTermReader.lo `test -f 'text/InMemTextTermReader.cpp' || echo '$(srcdir)/'`text/InMemTextTermReader.cpp
	$(am__mv) $(DEPDIR)/InMemTextTermReader.Tpo $(DEPDIR)/InMemTextTermReader.Plo
#	source='text/InMemTextTermReader.cpp' object='InMemTextTermReader.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o InMemTextTermReader.lo `test -f 'text/InMemTextTermReader.cpp' || echo '$(srcdir)/'`text/InMemTextTermReader.cpp

KeywordComponentCreator.lo: keyword/KeywordComponentCreator.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT KeywordComponentCreator.lo -MD -MP -MF $(DEPDIR)/KeywordComponentCreator.Tpo -c -o KeywordComponentCreator.lo `test -f 'keyword/KeywordComponentCreator.cpp' || echo '$(srcdir)/'`keyword/KeywordComponentCreator.cpp
	$(am__mv) $(DEPDIR)/KeywordComponentCreator.Tpo $(DEPDIR)/KeywordComponentCreator.Plo
#	source='keyword/KeywordComponentCreator.cpp' object='KeywordComponentCreator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o KeywordComponentCreator.lo `test -f 'keyword/KeywordComponentCreator.cpp' || echo '$(srcdir)/'`keyword/KeywordComponentCreator.cpp

KeywordIndexMerger.lo: keyword/KeywordIndexMerger.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT KeywordIndexMerger.lo -MD -MP -MF $(DEPDIR)/KeywordIndexMerger.Tpo -c -o KeywordIndexMerger.lo `test -f 'keyword/KeywordIndexMerger.cpp' || echo '$(srcdir)/'`keyword/KeywordIndexMerger.cpp
	$(am__mv) $(DEPDIR)/KeywordIndexMerger.Tpo $(DEPDIR)/KeywordIndexMerger.Plo
#	source='keyword/KeywordIndexMerger.cpp' object='KeywordIndexMerger.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o KeywordIndexMerger.lo `test -f 'keyword/KeywordIndexMerger.cpp' || echo '$(srcdir)/'`keyword/KeywordIndexMerger.cpp

KeywordIndexer.lo: keyword/KeywordIndexer.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT KeywordIndexer.lo -MD -MP -MF $(DEPDIR)/KeywordIndexer.Tpo -c -o KeywordIndexer.lo `test -f 'keyword/KeywordIndexer.cpp' || echo '$(srcdir)/'`keyword/KeywordIndexer.cpp
	$(am__mv) $(DEPDIR)/KeywordIndexer.Tpo $(DEPDIR)/KeywordIndexer.Plo
#	source='keyword/KeywordIndexer.cpp' object='KeywordIndexer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o KeywordIndexer.lo `test -f 'keyword/KeywordIndexer.cpp' || echo '$(srcdir)/'`keyword/KeywordIndexer.cpp

KeywordTermIterator.lo: keyword/KeywordTermIterator.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT KeywordTermIterator.lo -MD -MP -MF $(DEPDIR)/KeywordTermIterator.Tpo -c -o KeywordTermIterator.lo `test -f 'keyword/KeywordTermIterator.cpp' || echo '$(srcdir)/'`keyword/KeywordTermIterator.cpp
	$(am__mv) $(DEPDIR)/KeywordTermIterator.Tpo $(DEPDIR)/KeywordTermIterator.Plo
#	source='keyword/KeywordTermIterator.cpp' object='KeywordTermIterator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o KeywordTermIterator.lo `test -f 'keyword/KeywordTermIterator.cpp' || echo '$(srcdir)/'`keyword/KeywordTermIterator.cpp

KeywordTermReader.lo: keyword/KeywordTermReader.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT KeywordTermReader.lo -MD -MP -MF $(DEPDIR)/KeywordTermReader.Tpo -c -o KeywordTermReader.lo `test -f 'keyword/KeywordTermReader.cpp' || echo '$(srcdir)/'`keyword/KeywordTermReader.cpp
	$(am__mv) $(DEPDIR)/KeywordTermReader.Tpo $(DEPDIR)/KeywordTermReader.Plo
#	source='keyword/KeywordTermReader.cpp' object='KeywordTermReader.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o KeywordTermReader.lo `test -f 'keyword/KeywordTermReader.cpp' || echo '$(srcdir)/'`keyword/KeywordTermReader.cpp

InMemKeywordTermReader.lo: keyword/InMemKeywordTermReader.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT InMemKeywordTermReader.lo -MD -MP -MF $(DEPDIR)/InMemKeywordTermReader.Tpo -c -o InMemKeywordTermReader.lo `test -f 'keyword/InMemKeywordTermReader.cpp' || echo '$(srcdir)/'`keyword/InMemKeywordTermReader.cpp
	$(am__mv) $(DEPDIR)/InMemKeywordTermReader.Tpo $(DEPDIR)/InMemKeywordTermReader.Plo
#	source='keyword/InMemKeywordTermReader.cpp' object='InMemKeywordTermReader.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o InMemKeywordTermReader.lo `test -f 'keyword/InMemKeywordTermReader.cpp' || echo '$(srcdir)/'`keyword/InMemKeywordTermReader.cpp

PrimaryKeyTermReader.lo: primarykey/PrimaryKeyTermReader.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PrimaryKeyTermReader.lo -MD -MP -MF $(DEPDIR)/PrimaryKeyTermReader.Tpo -c -o PrimaryKeyTermReader.lo `test -f 'primarykey/PrimaryKeyTermReader.cpp' || echo '$(srcdir)/'`primarykey/PrimaryKeyTermReader.cpp
	$(am__mv) $(DEPDIR)/PrimaryKeyTermReader.Tpo $(DEPDIR)/PrimaryKeyTermReader.Plo
#	source='primarykey/PrimaryKeyTermReader.cpp' object='PrimaryKeyTermReader.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PrimaryKeyTermReader.lo `test -f 'primarykey/PrimaryKeyTermReader.cpp' || echo '$(srcdir)/'`primarykey/PrimaryKeyTermReader.cpp

PrimaryKeyTermIterator.lo: primarykey/PrimaryKeyTermIterator.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PrimaryKeyTermIterator.lo -MD -MP -MF $(DEPDIR)/PrimaryKeyTermIterator.Tpo -c -o PrimaryKeyTermIterator.lo `test -f 'primarykey/PrimaryKeyTermIterator.cpp' || echo '$(srcdir)/'`primarykey/PrimaryKeyTermIterator.cpp
	$(am__mv) $(DEPDIR)/PrimaryKeyTermIterator.Tpo $(DEPDIR)/PrimaryKeyTermIterator.Plo
#	source='primarykey/PrimaryKeyTermIterator.cpp' object='PrimaryKeyTermIterator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PrimaryKeyTermIterator.lo `test -f 'primarykey/PrimaryKeyTermIterator.cpp' || echo '$(srcdir)/'`primarykey/PrimaryKeyTermIterator.cpp

PrimaryKeyPostingDecoder.lo: primarykey/PrimaryKeyPostingDecoder.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PrimaryKeyPostingDecoder.lo -MD -MP -MF $(DEPDIR)/PrimaryKeyPostingDecoder.Tpo -c -o PrimaryKeyPostingDecoder.lo `test -f 'primarykey/PrimaryKeyPostingDecoder.cpp' || echo '$(srcdir)/'`primarykey/PrimaryKeyPostingDecoder.cpp
	$(am__mv) $(DEPDIR)/PrimaryKeyPostingDecoder.Tpo $(DEPDIR)/PrimaryKeyPostingDecoder.Plo
#	source='primarykey/PrimaryKeyPostingDecoder.cpp' object='PrimaryKeyPostingDecoder.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PrimaryKeyPostingDecoder.lo `test -f 'primarykey/PrimaryKeyPostingDecoder.cpp' || echo '$(srcdir)/'`primarykey/PrimaryKeyPostingDecoder.cpp

PrimaryKeyIndexer.lo: primarykey/PrimaryKeyIndexer.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PrimaryKeyIndexer.lo -MD -MP -MF $(DEPDIR)/PrimaryKeyIndexer.Tpo -c -o PrimaryKeyIndexer.lo `test -f 'primarykey/PrimaryKeyIndexer.cpp' || echo '$(srcdir)/'`primarykey/PrimaryKeyIndexer.cpp
	$(am__mv) $(DEPDIR)/PrimaryKeyIndexer.Tpo $(DEPDIR)/PrimaryKeyIndexer.Plo
#	source='primarykey/PrimaryKeyIndexer.cpp' object='PrimaryKeyIndexer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PrimaryKeyIndexer.lo `test -f 'primarykey/PrimaryKeyIndexer.cpp' || echo '$(srcdir)/'`primarykey/PrimaryKeyIndexer.cpp

PrimaryKeyMerger.lo: primarykey/PrimaryKeyMerger.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PrimaryKeyMerger.lo -MD -MP -MF $(DEPDIR)/PrimaryKeyMerger.Tpo -c -o PrimaryKeyMerger.lo `test -f 'primarykey/PrimaryKeyMerger.cpp' || echo '$(srcdir)/'`primarykey/PrimaryKeyMerger.cpp
	$(am__mv) $(DEPDIR)/PrimaryKeyMerger.Tpo $(DEPDIR)/PrimaryKeyMerger.Plo
#	source='primarykey/PrimaryKeyMerger.cpp' object='PrimaryKeyMerger.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PrimaryKeyMerger.lo `test -f 'primarykey/PrimaryKeyMerger.cpp' || echo '$(srcdir)/'`primarykey/PrimaryKeyMerger.cpp

PrimaryKeyCreator.lo: primarykey/PrimaryKeyCreator.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PrimaryKeyCreator.lo -MD -MP -MF $(DEPDIR)/PrimaryKeyCreator.Tpo -c -o PrimaryKeyCreator.lo `test -f 'primarykey/PrimaryKeyCreator.cpp' || echo '$(srcdir)/'`primarykey/PrimaryKeyCreator.cpp
	$(am__mv) $(DEPDIR)/PrimaryKeyCreator.Tpo $(DEPDIR)/PrimaryKeyCreator.Plo
#	source='primarykey/PrimaryKeyCreator.cpp' object='PrimaryKeyCreator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PrimaryKeyCreator.lo `test -f 'primarykey/PrimaryKeyCreator.cpp' || echo '$(srcdir)/'`primarykey/PrimaryKeyCreator.cpp

DateTimeComponentCreator.lo: datetime/DateTimeComponentCreator.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DateTimeComponentCreator.lo -MD -MP -MF $(DEPDIR)/DateTimeComponentCreator.Tpo -c -o DateTimeComponentCreator.lo `test -f 'datetime/DateTimeComponentCreator.cpp' || echo '$(srcdir)/'`datetime/DateTimeComponentCreator.cpp
	$(am__mv) $(DEPDIR)/DateTimeComponentCreator.Tpo $(DEPDIR)/DateTimeComponentCreator.Plo
#	source='datetime/DateTimeComponentCreator.cpp' object='DateTimeComponentCreator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DateTimeComponentCreator.lo `test -f 'datetime/DateTimeComponentCreator.cpp' || echo '$(srcdir)/'`datetime/DateTimeComponentCreator.cpp

DateTimeIndexMerger.lo: datetime/DateTimeIndexMerger.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DateTimeIndexMerger.lo -MD -MP -MF $(DEPDIR)/DateTimeIndexMerger.Tpo -c -o DateTimeIndexMerger.lo `test -f 'datetime/DateTimeIndexMerger.cpp' || echo '$(srcdir)/'`datetime/DateTimeIndexMerger.cpp
	$(am__mv) $(DEPDIR)/DateTimeIndexMerger.Tpo $(DEPDIR)/DateTimeIndexMerger.Plo
#	source='datetime/DateTimeIndexMerger.cpp' object='DateTimeIndexMerger.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DateTimeIndexMerger.lo `test -f 'datetime/DateTimeIndexMerger.cpp' || echo '$(srcdir)/'`datetime/DateTimeIndexMerger.cpp

DateTimeIndexer.lo: datetime/DateTimeIndexer.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DateTimeIndexer.lo -MD -MP -MF $(DEPDIR)/DateTimeIndexer.Tpo -c -o DateTimeIndexer.lo `test -f 'datetime/DateTimeIndexer.cpp' || echo '$(srcdir)/'`datetime/DateTimeIndexer.cpp
	$(am__mv) $(DEPDIR)/DateTimeIndexer.Tpo $(DEPDIR)/DateTimeIndexer.Plo
#	source='datetime/DateTimeIndexer.cpp' object='DateTimeIndexer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DateTimeIndexer.lo `test -f 'datetime/DateTimeIndexer.cpp' || echo '$(srcdir)/'`datetime/DateTimeIndexer.cpp

DateTimeTermIterator.lo: datetime/DateTimeTermIterator.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DateTimeTermIterator.lo -MD -MP -MF $(DEPDIR)/DateTimeTermIterator.Tpo -c -o DateTimeTermIterator.lo `test -f 'datetime/DateTimeTermIterator.cpp' || echo '$(srcdir)/'`datetime/DateTimeTermIterator.cpp
	$(am__mv) $(DEPDIR)/DateTimeTermIterator.Tpo $(DEPDIR)/DateTimeTermIterator.Plo
#	source='datetime/DateTimeTermIterator.cpp' object='DateTimeTermIterator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DateTimeTermIterator.lo `test -f 'datetime/DateTimeTermIterator.cpp' || echo '$(srcdir)/'`datetime/DateTimeTermIterator.cpp

DateTimeTermReader.lo: datetime/DateTimeTermReader.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DateTimeTermReader.lo -MD -MP -MF $(DEPDIR)/DateTimeTermReader.Tpo -c -o DateTimeTermReader.lo `test -f 'datetime/DateTimeTermReader.cpp' || echo '$(srcdir)/'`datetime/DateTimeTermReader.cpp
	$(am__mv) $(DEPDIR)/DateTimeTermReader.Tpo $(DEPDIR)/DateTimeTermReader.Plo
#	source='datetime/DateTimeTermReader.cpp' object='DateTimeTermReader.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DateTimeTermReader.lo `test -f 'datetime/DateTimeTermReader.cpp' || echo '$(srcdir)/'`datetime/DateTimeTermReader.cpp

InMemDateTimeTermReader.lo: datetime/InMemDateTimeTermReader.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT InMemDateTimeTermReader.lo -MD -MP -MF $(DEPDIR)/InMemDateTimeTermReader.Tpo -c -o InMemDateTimeTermReader.lo `test -f 'datetime/InMemDateTimeTermReader.cpp' || echo '$(srcdir)/'`datetime/InMemDateTimeTermReader.cpp
	$(am__mv) $(DEPDIR)/InMemDateTimeTermReader.Tpo $(DEPDIR)/InMemDateTimeTermReader.Plo
#	source='datetime/InMemDateTimeTermReader.cpp' object='InMemDateTimeTermReader.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o InMemDateTimeTermReader.lo `test -f 'datetime/InMemDateTimeTermReader.cpp' || echo '$(srcdir)/'`datetime/InMemDateTimeTermReader.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
